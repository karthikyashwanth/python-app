name: CI/CD with Security Best Practices

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

  sast_bandit:
    runs-on: ubuntu-latest
    name: Bandit Scan (Python SAST)
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: |
          pip install bandit
          bandit -r . -f json -o bandit-report.json || true
      - name: Upload Bandit Report
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit-report.json

  dependency_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Audit Python dependencies
        run: |
          pip install safety
          safety check || true

  trivy_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Trivy
        run: |
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.50.1_Linux-64bit.deb
      - name: Build Docker image
        run: |
          docker build -t myapp:latest .
      - name: Scan Docker image with Trivy
        run: |
          trivy image --exit-code 0 --severity HIGH,CRITICAL myapp:latest > trivy-report.txt
      - uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-report.txt

  codeql:
    name: CodeQL SAST
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
    steps:
      - uses: actions/checkout@v3
      - uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - uses: github/codeql-action/analyze@v2

  test:
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Run tests
        run: |
          pip install -r requirements.txt
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to staging
        run: echo "Deploy step here (e.g., upload to AWS, GCP, or use Ansible/Kubernetes)"

